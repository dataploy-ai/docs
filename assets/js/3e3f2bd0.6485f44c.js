"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1069],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=s(n),k=r,g=m["".concat(p,".").concat(k)]||m[k]||d[k]||l;return n?a.createElement(g,o(o({ref:e},u),{},{components:n})):a.createElement(g,o({ref:e},u))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},710:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={},p="geo",s={unversionedId:"reference/pyexp/natun-built-ins/geo",id:"reference/pyexp/natun-built-ins/geo",title:"geo",description:"geo defines geographic operations in two-dimensional space",source:"@site/docs/reference/pyexp/natun-built-ins/geo.md",sourceDirName:"reference/pyexp/natun-built-ins",slug:"/reference/pyexp/natun-built-ins/geo",permalink:"/docs/reference/pyexp/natun-built-ins/geo",draft:!1,editUrl:"https://github.com/natun-ai/docs/tree/master/docs/docs/reference/pyexp/natun-built-ins/geo.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"bsoup",permalink:"/docs/reference/pyexp/natun-built-ins/bsoup"},next:{title:"hash",permalink:"/docs/reference/pyexp/natun-built-ins/hash"}},u={},d=[{value:"Functions",id:"functions",level:3},{value:"Types",id:"types",level:3},{value:"<code>Line</code>",id:"line",level:4},{value:"<code>MultiPolygon</code>",id:"multipolygon",level:4},{value:"<code>Polygon</code>",id:"polygon",level:4}],m={toc:d};function k(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"geo"},"geo"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"geo")," defines geographic operations in two-dimensional space"),(0,l.kt)("h3",{id:"functions"},"Functions"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Line(points) Line"))),(0,l.kt)("p",null,"Line constructor. Takes either an array of coordinate pairs or an array of point objects and returns the line that connects them. Points do not need to be collinear, providing a single point returns a line with a length of 0"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"points")),(0,l.kt)("td",{parentName:"tr",align:null},"`[]float"),(0,l.kt)("td",{parentName:"tr",align:null},"Point`")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MultiPolygon(polygons) MultiPolygon"))),(0,l.kt)("p",null,"MultiPolygon constructor. MultiPolygon groups a list of polygons to behave like a single polygon"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"polygons")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[Polygon]")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Point(x,y) Point"))),(0,l.kt)("p",null,"Point constructor, takes an x(longitude) and y(latitude) value and returns a Point object"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"x")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"x-dimension value (longitude if using geodesic space)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"y-dimension value (latitude if using geodesic space)")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Polygon(rings) Polygon"))),(0,l.kt)("p",null,"Polygon constructor. Takes a list of lists of coordinate pairs (or point objects) that define the outer boundary and any holes / inner boundaries that represent a polygon. In GIS tradition, lists of coordinates that wind clockwise are filled regions and anti-clockwise represent holes."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"rings")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[Line]")),(0,l.kt)("td",{parentName:"tr",align:null},"list of closed lines that constitute the polygon")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"parseGeoJSON(data) (geoms, properties)"))),(0,l.kt)("p",null,"Parses string data in IETF-7946 format (",(0,l.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7946"},"https://tools.ietf.org/html/rfc7946"),") returning a list of geometries and equal-length list of properties for each geometry"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"data")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"string of GeoJSON data")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"within(geom,polygon) bool"))),(0,l.kt)("p",null,"Returns True if geom is entirely contained by polygon"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"geom")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[point,line,polygon]")),(0,l.kt)("td",{parentName:"tr",align:null},"maybe-inner geometry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"polygon")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[Polygon,MultiPolygon]")),(0,l.kt)("td",{parentName:"tr",align:null},"maybe-outer polygon")))),(0,l.kt)("h3",{id:"types"},"Types"),(0,l.kt)("h4",{id:"line"},(0,l.kt)("inlineCode",{parentName:"h4"},"Line")),(0,l.kt)("p",null,"an ordered list of points that define a line ",(0,l.kt)("strong",{parentName:"p"},"Methods")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"length() float"))),(0,l.kt)("p",null,"Euclidean Length"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"geodesicLength() float"))),(0,l.kt)("p",null,"Line length on the surface of a sphere with the same radius as Earth"),(0,l.kt)("h4",{id:"multipolygon"},(0,l.kt)("inlineCode",{parentName:"h4"},"MultiPolygon")),(0,l.kt)("p",null,"MultiPolygon groups a list of polygons to behave like a single polygon### ",(0,l.kt)("inlineCode",{parentName:"p"},"Point")," a two-dimensional point in space ",(0,l.kt)("strong",{parentName:"p"},"Methods")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"distance(p2) float"))),(0,l.kt)("p",null,"Euclidean Distance to the other point"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"p2")),(0,l.kt)("td",{parentName:"tr",align:null},"``"),(0,l.kt)("td",{parentName:"tr",align:null},"point to measure distance to")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"distanceGeodesic(p2) float"))),(0,l.kt)("p",null,"Distance on the surface of a sphere with the same radius as Earth"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parameters:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"p2")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"point")),(0,l.kt)("td",{parentName:"tr",align:null},"point to measure distance to")))),(0,l.kt)("h4",{id:"polygon"},(0,l.kt)("inlineCode",{parentName:"h4"},"Polygon")),(0,l.kt)("p",null,"an ordered list of closed lines (rings) that define a shape. lists of coordinates that wind clockwise are filled regions and anti-clockwise represent holes."))}k.isMDXComponent=!0}}]);