"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9402],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(n),f=o,d=m["".concat(p,".").concat(f)]||m[f]||c[f]||a;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},s="bsoup",i={unversionedId:"reference/pyexp/natun-built-ins/bsoup",id:"reference/pyexp/natun-built-ins/bsoup",title:"bsoup",description:"bsoup defines a beautiful-soup-like API for working with HTML documents",source:"@site/docs/reference/pyexp/natun-built-ins/bsoup.md",sourceDirName:"reference/pyexp/natun-built-ins",slug:"/reference/pyexp/natun-built-ins/bsoup",permalink:"/docs/reference/pyexp/natun-built-ins/bsoup",draft:!1,editUrl:"https://github.com/dataploy-ai/docs/tree/master/docs/reference/pyexp/natun-built-ins/bsoup.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"base64",permalink:"/docs/reference/pyexp/natun-built-ins/base64"},next:{title:"geo",permalink:"/docs/reference/pyexp/natun-built-ins/geo"}},p={},l=[{value:"Functions",id:"functions",level:3},{value:"Types",id:"types",level:3},{value:"<code>SoupNode</code>",id:"soupnode",level:4}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bsoup"},"bsoup"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"bsoup")," defines a beautiful-soup-like API for working with HTML documents"),(0,o.kt)("h3",{id:"functions"},"Functions"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"parseHtml(html string) SoupNode"))),(0,o.kt)("p",null,"parseHtml parses html from a string, returning the root SoupNode"),(0,o.kt)("h3",{id:"types"},"Types"),(0,o.kt)("h4",{id:"soupnode"},(0,o.kt)("inlineCode",{parentName:"h4"},"SoupNode")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Methods")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"`find(name, attrs, recursive, string, "),"kwargs)`**"),(0,o.kt)("p",null,"retrieve the first occurance of an element that matches arguments passed to find. works similarly to ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find"},"node.find()")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"`find_all(name, attrs, recursive, string, limit, "),"kwargs)`**"),(0,o.kt)("p",null,"retrieves all descendants that match arguments passed to find","_","all. works similarly to ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find-all"},"node.find","_","all()")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"attrs()"))),(0,o.kt)("p",null,"get a dictionary of element attributes works similarly to ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#attributes"},"node.attrs")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents()"))),(0,o.kt)("p",null,"gets the list of children of an element works similarly to ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#contents-and-children"},"soup.contents")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"child()"))),(0,o.kt)("p",null,"gets a single child element with the given tag name works like accessing a node ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#navigating-using-tag-names"},"using its tag name")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"parent()"))),(0,o.kt)("p",null,"gets the parent node of an element works like ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#parent"},"node.parent")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"next_sibling()"))),(0,o.kt)("p",null,"gets the next sibling of an element works like ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#next-sibling-and-previous-sibling"},"node.next","_","sibling")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"prev_sibling()"))),(0,o.kt)("p",null,"gets the previous sibling of an element works like ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#next-sibling-and-previous-sibling"},"node.prev","_","sibling")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"get_text()"))),(0,o.kt)("p",null,"all the text in a document or beneath a tag, as a single Unicode string: works like ",(0,o.kt)("a",{parentName:"p",href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#get-text"},"soup.get","_","text")))}c.isMDXComponent=!0}}]);