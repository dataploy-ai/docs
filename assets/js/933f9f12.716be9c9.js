"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9871],{3905:function(e,t,r){r.d(t,{Zo:function(){return i},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},i=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=l(r),d=n,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||o;return r?a.createElement(m,u(u({ref:t},i),{},{components:r})):a.createElement(m,u({ref:t},i))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,u=new Array(o);u[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,u[1]=s;for(var l=2;l<o;l++)u[l]=r[l];return a.createElement.apply(null,u)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9360:function(e,t,r){r.r(t),r.d(t,{assets:function(){return i},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return f}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),u=["components"],s={},c="Feature Values",l={unversionedId:"reference/how-does-natun-work/features/feature-values",id:"reference/how-does-natun-work/features/feature-values",title:"Feature Values",description:"Features are there to provide feature values to your models.",source:"@site/docs/reference/how-does-natun-work/features/feature-values.md",sourceDirName:"reference/how-does-natun-work/features",slug:"/reference/how-does-natun-work/features/feature-values",permalink:"/docs/reference/how-does-natun-work/features/feature-values",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/how-does-natun-work/features/feature-values.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Features SLA",permalink:"/docs/reference/how-does-natun-work/features/feature-sla"},next:{title:"Historical Data and Backfill",permalink:"/docs/reference/how-does-natun-work/historical-data-and-backfill"}},i={},f=[],p={toc:f};function d(e){var t=e.components,r=(0,n.Z)(e,u);return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"feature-values"},"Feature Values"),(0,o.kt)("p",null,"Features are there to provide ",(0,o.kt)("strong",{parentName:"p"},"feature")," ",(0,o.kt)("strong",{parentName:"p"},"values")," to your models."),(0,o.kt)("p",null,"Feature values are always of a ",(0,o.kt)("strong",{parentName:"p"},"primitive type"),". This can be an integer, float, string, or a list (vector) of integers, floats or strings."),(0,o.kt)("p",null,"Feature Values may be computed ",(0,o.kt)("strong",{parentName:"p"},"on demand")," (when requested), or ",(0,o.kt)("strong",{parentName:"p"},"eagerly")," (for example when a new event arrives on a streaming data source)."),(0,o.kt)("p",null,"Feature Values are always ",(0,o.kt)("strong",{parentName:"p"},"cached"),", to ensure the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/how-does-natun-work/features/feature-sla"},"Feature SLA "),"and to provide historical data. You control how old of a feature value in cache is considered fresh, stale or in between."),(0,o.kt)("p",null,"More on on demand vs eager computation"),(0,o.kt)("p",null,"Some features are computed on-demand when a model or another feature tries to read the feature value. For example, a feature might be defined as the country code of a customer, and it's calculated by calling into a REST service with the customer's IP.   Values for such features would usually be cached in the ",(0,o.kt)("strong",{parentName:"p"},"Integrated Feature Store")," to avoid overloading external systems, as well as to provide the value quickly to the model.  Caching implies a tradeoff between freshness and system load (memory, computing, external API calls, etc.), and you can control this tradeoff using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/how-does-natun-work/features/feature-sla"},(0,o.kt)("strong",{parentName:"a"},"Freshness"),", ",(0,o.kt)("strong",{parentName:"a"},"Staleness,")," and ",(0,o.kt)("strong",{parentName:"a"},"Deadline"))," values for your feature definition."),(0,o.kt)("p",null,"Other features are computed when an event arrives, for example when a Kafka message is available on a topic.  The value resulting from these computations would be stored in the ",(0,o.kt)("strong",{parentName:"p"},"Feature Store")," for later access by the models, or by other features."))}d.isMDXComponent=!0}}]);