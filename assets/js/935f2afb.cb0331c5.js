"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"customProps":{"description":"This description can be used in the swizzled DocCard"},"items":[{"type":"link","label":"Architectural Design","href":"/docs/reference/spec","docId":"reference/spec"},{"type":"category","label":"How does Natun work?","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Feature Builders","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Building your own Builder","href":"/docs/reference/how-does-natun-work/feature-builders/building-your-own-builder","docId":"reference/how-does-natun-work/feature-builders/building-your-own-builder"},{"type":"link","label":"Digestion","href":"/docs/reference/how-does-natun-work/feature-builders/digestion","docId":"reference/how-does-natun-work/feature-builders/digestion"}],"href":"/docs/reference/how-does-natun-work/feature-builders/"},{"type":"link","label":"Connectors","href":"/docs/reference/how-does-natun-work/connectors","docId":"reference/how-does-natun-work/connectors"},{"type":"link","label":"Deployment","href":"/docs/reference/how-does-natun-work/deployment","docId":"reference/how-does-natun-work/deployment"},{"type":"category","label":"Extending Natun","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Builders","href":"/docs/reference/how-does-natun-work/extending-natun/custom-builders","docId":"reference/how-does-natun-work/extending-natun/custom-builders"}],"href":"/docs/reference/how-does-natun-work/extending-natun/"},{"type":"link","label":"Feature Sets","href":"/docs/reference/how-does-natun-work/feature-sets","docId":"reference/how-does-natun-work/feature-sets"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregations","href":"/docs/reference/how-does-natun-work/features/aggregations","docId":"reference/how-does-natun-work/features/aggregations"},{"type":"link","label":"Feature Definitions","href":"/docs/reference/how-does-natun-work/features/feature-definitions","docId":"reference/how-does-natun-work/features/feature-definitions"},{"type":"link","label":"Features SLA","href":"/docs/reference/how-does-natun-work/features/feature-sla","docId":"reference/how-does-natun-work/features/feature-sla"},{"type":"link","label":"Feature Values","href":"/docs/reference/how-does-natun-work/features/feature-values","docId":"reference/how-does-natun-work/features/feature-values"}],"href":"/docs/reference/how-does-natun-work/features/"},{"type":"link","label":"Historical Data and Backfill","href":"/docs/reference/how-does-natun-work/historical-data-and-backfill","docId":"reference/how-does-natun-work/historical-data-and-backfill"}],"href":"/docs/reference/how-does-natun-work/"},{"type":"category","label":"Python Expression Language (PyExp)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Differences with Python","href":"/docs/reference/pyexp/differences-with-python","docId":"reference/pyexp/differences-with-python"},{"type":"link","label":"Handler function","href":"/docs/reference/pyexp/handler-function","docId":"reference/pyexp/handler-function"},{"type":"category","label":"Natun Built-ins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"base64","href":"/docs/reference/pyexp/natun-built-ins/base64","docId":"reference/pyexp/natun-built-ins/base64"},{"type":"link","label":"bsoup","href":"/docs/reference/pyexp/natun-built-ins/bsoup","docId":"reference/pyexp/natun-built-ins/bsoup"},{"type":"link","label":"geo","href":"/docs/reference/pyexp/natun-built-ins/geo","docId":"reference/pyexp/natun-built-ins/geo"},{"type":"link","label":"hash","href":"/docs/reference/pyexp/natun-built-ins/hash","docId":"reference/pyexp/natun-built-ins/hash"},{"type":"link","label":"html","href":"/docs/reference/pyexp/natun-built-ins/html","docId":"reference/pyexp/natun-built-ins/html"},{"type":"link","label":"json","href":"/docs/reference/pyexp/natun-built-ins/json","docId":"reference/pyexp/natun-built-ins/json"},{"type":"link","label":"math","href":"/docs/reference/pyexp/natun-built-ins/math","docId":"reference/pyexp/natun-built-ins/math"},{"type":"link","label":"re (regular expressions)","href":"/docs/reference/pyexp/natun-built-ins/re-regular-expressions","docId":"reference/pyexp/natun-built-ins/re-regular-expressions"},{"type":"link","label":"struct","href":"/docs/reference/pyexp/natun-built-ins/struct","docId":"reference/pyexp/natun-built-ins/struct"},{"type":"link","label":"time","href":"/docs/reference/pyexp/natun-built-ins/time","docId":"reference/pyexp/natun-built-ins/time"}],"href":"/docs/reference/pyexp/natun-built-ins/"},{"type":"category","label":"PyExp: Language definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Built-in constants and functions","href":"/docs/reference/pyexp/pyexp-language-definition/built-in-constants-and-functions","docId":"reference/pyexp/pyexp-language-definition/built-in-constants-and-functions"},{"type":"link","label":"Built-in methods","href":"/docs/reference/pyexp/pyexp-language-definition/built-in-methods","docId":"reference/pyexp/pyexp-language-definition/built-in-methods"},{"type":"link","label":"Data types","href":"/docs/reference/pyexp/pyexp-language-definition/data-types","docId":"reference/pyexp/pyexp-language-definition/data-types"},{"type":"link","label":"Expressions","href":"/docs/reference/pyexp/pyexp-language-definition/expressions","docId":"reference/pyexp/pyexp-language-definition/expressions"},{"type":"link","label":"Lexical elements","href":"/docs/reference/pyexp/pyexp-language-definition/lexical-elements","docId":"reference/pyexp/pyexp-language-definition/lexical-elements"},{"type":"link","label":"Name binding and variables","href":"/docs/reference/pyexp/pyexp-language-definition/name-binding-and-variables","docId":"reference/pyexp/pyexp-language-definition/name-binding-and-variables"},{"type":"link","label":"Statements","href":"/docs/reference/pyexp/pyexp-language-definition/statements","docId":"reference/pyexp/pyexp-language-definition/statements"},{"type":"link","label":"Value concepts","href":"/docs/reference/pyexp/pyexp-language-definition/value-concepts","docId":"reference/pyexp/pyexp-language-definition/value-concepts"}],"href":"/docs/reference/pyexp/pyexp-language-definition/"}],"href":"/docs/reference/pyexp/"}]},{"type":"category","label":"Welcome","collapsible":true,"collapsed":false,"customProps":{"description":"This description can be used in the swizzled DocCard"},"className":"red","items":[{"type":"link","label":"Demo features","href":"/docs/welcome/demo-features","docId":"welcome/demo-features"},{"type":"link","label":"Hello World feature","href":"/docs/welcome/hello-world-feature","docId":"welcome/hello-world-feature"},{"type":"link","label":"The mock website","href":"/docs/welcome/the-mock-website","docId":"welcome/the-mock-website"}],"href":"/docs/category/welcome"},{"type":"link","label":"Getting Started","href":"/docs/","docId":"readme"},{"type":"link","label":"Tutorial: Building Your First Feature","href":"/docs/tutorial-building-your-first-feature","docId":"tutorial-building-your-first-feature"},{"type":"link","label":"Troubleshooting features","href":"/docs/troubleshooting-features","docId":"troubleshooting-features"},{"type":"link","label":"Contact the support team","href":"/docs/contact-the-support-team","docId":"contact-the-support-team"},{"type":"link","label":"getting-started-with-labsdk","href":"/docs/getting-started-with-labsdk","docId":"getting-started-with-labsdk"}],"reference":[{"type":"link","label":"Architectural Design","href":"/docs/reference/spec","docId":"reference/spec"},{"type":"category","label":"How does Natun work?","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Feature Builders","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Building your own Builder","href":"/docs/reference/how-does-natun-work/feature-builders/building-your-own-builder","docId":"reference/how-does-natun-work/feature-builders/building-your-own-builder"},{"type":"link","label":"Digestion","href":"/docs/reference/how-does-natun-work/feature-builders/digestion","docId":"reference/how-does-natun-work/feature-builders/digestion"}],"href":"/docs/reference/how-does-natun-work/feature-builders/"},{"type":"link","label":"Connectors","href":"/docs/reference/how-does-natun-work/connectors","docId":"reference/how-does-natun-work/connectors"},{"type":"link","label":"Deployment","href":"/docs/reference/how-does-natun-work/deployment","docId":"reference/how-does-natun-work/deployment"},{"type":"category","label":"Extending Natun","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Builders","href":"/docs/reference/how-does-natun-work/extending-natun/custom-builders","docId":"reference/how-does-natun-work/extending-natun/custom-builders"}],"href":"/docs/reference/how-does-natun-work/extending-natun/"},{"type":"link","label":"Feature Sets","href":"/docs/reference/how-does-natun-work/feature-sets","docId":"reference/how-does-natun-work/feature-sets"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregations","href":"/docs/reference/how-does-natun-work/features/aggregations","docId":"reference/how-does-natun-work/features/aggregations"},{"type":"link","label":"Feature Definitions","href":"/docs/reference/how-does-natun-work/features/feature-definitions","docId":"reference/how-does-natun-work/features/feature-definitions"},{"type":"link","label":"Features SLA","href":"/docs/reference/how-does-natun-work/features/feature-sla","docId":"reference/how-does-natun-work/features/feature-sla"},{"type":"link","label":"Feature Values","href":"/docs/reference/how-does-natun-work/features/feature-values","docId":"reference/how-does-natun-work/features/feature-values"}],"href":"/docs/reference/how-does-natun-work/features/"},{"type":"link","label":"Historical Data and Backfill","href":"/docs/reference/how-does-natun-work/historical-data-and-backfill","docId":"reference/how-does-natun-work/historical-data-and-backfill"}],"href":"/docs/reference/how-does-natun-work/"},{"type":"category","label":"Python Expression Language (PyExp)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Differences with Python","href":"/docs/reference/pyexp/differences-with-python","docId":"reference/pyexp/differences-with-python"},{"type":"link","label":"Handler function","href":"/docs/reference/pyexp/handler-function","docId":"reference/pyexp/handler-function"},{"type":"category","label":"Natun Built-ins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"base64","href":"/docs/reference/pyexp/natun-built-ins/base64","docId":"reference/pyexp/natun-built-ins/base64"},{"type":"link","label":"bsoup","href":"/docs/reference/pyexp/natun-built-ins/bsoup","docId":"reference/pyexp/natun-built-ins/bsoup"},{"type":"link","label":"geo","href":"/docs/reference/pyexp/natun-built-ins/geo","docId":"reference/pyexp/natun-built-ins/geo"},{"type":"link","label":"hash","href":"/docs/reference/pyexp/natun-built-ins/hash","docId":"reference/pyexp/natun-built-ins/hash"},{"type":"link","label":"html","href":"/docs/reference/pyexp/natun-built-ins/html","docId":"reference/pyexp/natun-built-ins/html"},{"type":"link","label":"json","href":"/docs/reference/pyexp/natun-built-ins/json","docId":"reference/pyexp/natun-built-ins/json"},{"type":"link","label":"math","href":"/docs/reference/pyexp/natun-built-ins/math","docId":"reference/pyexp/natun-built-ins/math"},{"type":"link","label":"re (regular expressions)","href":"/docs/reference/pyexp/natun-built-ins/re-regular-expressions","docId":"reference/pyexp/natun-built-ins/re-regular-expressions"},{"type":"link","label":"struct","href":"/docs/reference/pyexp/natun-built-ins/struct","docId":"reference/pyexp/natun-built-ins/struct"},{"type":"link","label":"time","href":"/docs/reference/pyexp/natun-built-ins/time","docId":"reference/pyexp/natun-built-ins/time"}],"href":"/docs/reference/pyexp/natun-built-ins/"},{"type":"category","label":"PyExp: Language definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Built-in constants and functions","href":"/docs/reference/pyexp/pyexp-language-definition/built-in-constants-and-functions","docId":"reference/pyexp/pyexp-language-definition/built-in-constants-and-functions"},{"type":"link","label":"Built-in methods","href":"/docs/reference/pyexp/pyexp-language-definition/built-in-methods","docId":"reference/pyexp/pyexp-language-definition/built-in-methods"},{"type":"link","label":"Data types","href":"/docs/reference/pyexp/pyexp-language-definition/data-types","docId":"reference/pyexp/pyexp-language-definition/data-types"},{"type":"link","label":"Expressions","href":"/docs/reference/pyexp/pyexp-language-definition/expressions","docId":"reference/pyexp/pyexp-language-definition/expressions"},{"type":"link","label":"Lexical elements","href":"/docs/reference/pyexp/pyexp-language-definition/lexical-elements","docId":"reference/pyexp/pyexp-language-definition/lexical-elements"},{"type":"link","label":"Name binding and variables","href":"/docs/reference/pyexp/pyexp-language-definition/name-binding-and-variables","docId":"reference/pyexp/pyexp-language-definition/name-binding-and-variables"},{"type":"link","label":"Statements","href":"/docs/reference/pyexp/pyexp-language-definition/statements","docId":"reference/pyexp/pyexp-language-definition/statements"},{"type":"link","label":"Value concepts","href":"/docs/reference/pyexp/pyexp-language-definition/value-concepts","docId":"reference/pyexp/pyexp-language-definition/value-concepts"}],"href":"/docs/reference/pyexp/pyexp-language-definition/"}],"href":"/docs/reference/pyexp/"}]},"docs":{"contact-the-support-team":{"id":"contact-the-support-team","title":"Contact the support team","description":"Please email us at: support@natun.ai","sidebar":"docs"},"getting-started-with-labsdk":{"id":"getting-started-with-labsdk","title":"getting-started-with-labsdk","description":"Open In Colab","sidebar":"docs"},"readme":{"id":"readme","title":"Welcome to the Natun Documentation","description":"Welcome to Natun docs!","sidebar":"docs"},"reference/how-does-natun-work/connectors":{"id":"reference/how-does-natun-work/connectors","title":"Connectors","description":"Connectors define how can your Features draw data from external data sources. These can be streaming sources, analytical databases, CRM systems, and others.","sidebar":"reference"},"reference/how-does-natun-work/deployment":{"id":"reference/how-does-natun-work/deployment","title":"Deployment","description":"All of Natun\'s resources are defined as Kubernetes compatible YAML manifests.","sidebar":"reference"},"reference/how-does-natun-work/extending-natun/custom-builders":{"id":"reference/how-does-natun-work/extending-natun/custom-builders","title":"Custom Builders","description":"Natun Operator uses Builders to create live Features. Builders use a low-level API of Natun to configure everything from data connections through computation, aggregation to storage, as well as production and SLA requirements for the feature.","sidebar":"reference"},"reference/how-does-natun-work/extending-natun/README":{"id":"reference/how-does-natun-work/extending-natun/README","title":"Extending Natun","description":"","sidebar":"reference"},"reference/how-does-natun-work/feature-builders/building-your-own-builder":{"id":"reference/how-does-natun-work/feature-builders/building-your-own-builder","title":"Building your own Builder","description":"","sidebar":"reference"},"reference/how-does-natun-work/feature-builders/digestion":{"id":"reference/how-does-natun-work/feature-builders/digestion","title":"Digestion","description":"Digestion is the process of processing your \\"business logic\\" in order to calculate a feature value and store it inside of Natun.","sidebar":"reference"},"reference/how-does-natun-work/feature-builders/readme":{"id":"reference/how-does-natun-work/feature-builders/readme","title":"Feature Builders","description":"","sidebar":"reference"},"reference/how-does-natun-work/feature-sets":{"id":"reference/how-does-natun-work/feature-sets","title":"Feature Sets","description":"Feature Sets group Features together as a unit for the consumption of models.  Most Models rely on multiple Features, and it makes sense to receive all the feature values and metadata in a single call.","sidebar":"reference"},"reference/how-does-natun-work/features/aggregations":{"id":"reference/how-does-natun-work/features/aggregations","title":"Aggregations","description":"Often the Feature we want to calculate is an aggregate of multiple events, for example - the sum number of visits to a product page, the average time per slide, or the variance of the length of interactions with the user.","sidebar":"reference"},"reference/how-does-natun-work/features/feature-definitions":{"id":"reference/how-does-natun-work/features/feature-definitions","title":"Feature Definitions","description":"Feature Definitions are written by Data Scientists and describe the desired features. Natun uses these definitions to create your features in research and production environments, provision the necessary connections, compute and storage resources, and offer collaboration, management and governance layers around features.","sidebar":"reference"},"reference/how-does-natun-work/features/feature-sla":{"id":"reference/how-does-natun-work/features/feature-sla","title":"Features SLA","description":"Natun helps you deploy and manage Operative Features in production, and operative production flows expect strict guarantees of time to response (latency), freshness of data, consistency, availability, and resilience to dynamic conditions such as a spike in usage or a return from downtime (\\"thundering herd\\" phenomena).","sidebar":"reference"},"reference/how-does-natun-work/features/feature-values":{"id":"reference/how-does-natun-work/features/feature-values","title":"Feature Values","description":"Features are there to provide feature values to your models.","sidebar":"reference"},"reference/how-does-natun-work/features/README":{"id":"reference/how-does-natun-work/features/README","title":"Features","description":"In data science, a Feature is an input to your models.","sidebar":"reference"},"reference/how-does-natun-work/historical-data-and-backfill":{"id":"reference/how-does-natun-work/historical-data-and-backfill","title":"Historical Data and Backfill","description":"Features are used both in production and in training of ML models. Natun allows you to describe the feature once and use it in both cases, and handles all the engineering overhead of calculation, storage and access methods that are optimized differently between these two use cases.","sidebar":"reference"},"reference/how-does-natun-work/readme":{"id":"reference/how-does-natun-work/readme","title":"How does Natun work?","description":"Data Scientists use Natun to describe and deploy Features to Production, without drowning in engineering specifics.","sidebar":"reference"},"reference/pyexp/differences-with-python":{"id":"reference/pyexp/differences-with-python","title":"Differences with Python","description":"Although PyExp is pretty similar to \\"regular\\" python, it\'s actually has a few differences which allow us to run it in a deterministic way that is production-proof.","sidebar":"reference"},"reference/pyexp/handler-function":{"id":"reference/pyexp/handler-function","title":"Handler function","description":"Implementing features with PyExp is easy.","sidebar":"reference"},"reference/pyexp/natun-built-ins/base64":{"id":"reference/pyexp/natun-built-ins/base64","title":"base64","description":"base64 defines base64 encoding & decoding functions, often used to represent binary as text.","sidebar":"reference"},"reference/pyexp/natun-built-ins/bsoup":{"id":"reference/pyexp/natun-built-ins/bsoup","title":"bsoup","description":"bsoup defines a beautiful-soup-like API for working with HTML documents","sidebar":"reference"},"reference/pyexp/natun-built-ins/geo":{"id":"reference/pyexp/natun-built-ins/geo","title":"geo","description":"geo defines geographic operations in two-dimensional space","sidebar":"reference"},"reference/pyexp/natun-built-ins/hash":{"id":"reference/pyexp/natun-built-ins/hash","title":"hash","description":"hash defines hash primitives for starlark","sidebar":"reference"},"reference/pyexp/natun-built-ins/html":{"id":"reference/pyexp/natun-built-ins/html","title":"html","description":"html defines jquery-like html selection & iteration functions for HTML documents","sidebar":"reference"},"reference/pyexp/natun-built-ins/json":{"id":"reference/pyexp/natun-built-ins/json","title":"json","description":"Module json is a module of JSON-related functions.","sidebar":"reference"},"reference/pyexp/natun-built-ins/math":{"id":"reference/pyexp/natun-built-ins/math","title":"math","description":"Module math is a Starlark module of math-related functions and constants. The module defines the following functions:","sidebar":"reference"},"reference/pyexp/natun-built-ins/re-regular-expressions":{"id":"reference/pyexp/natun-built-ins/re-regular-expressions","title":"re (regular expressions)","description":"re defines regular expression functions, it\'s intended to be a drop-in subset of python\'s re module for starlark//docs.python.org/3/library/re.html","sidebar":"reference"},"reference/pyexp/natun-built-ins/readme":{"id":"reference/pyexp/natun-built-ins/readme","title":"Natun Built-ins","description":"Natun has implemented a few built-in functions in the PyExp Runtime that can help you integrate feature operations in your code:","sidebar":"reference"},"reference/pyexp/natun-built-ins/struct":{"id":"reference/pyexp/natun-built-ins/struct","title":"struct","description":"A generic object with fields.","sidebar":"reference"},"reference/pyexp/natun-built-ins/time":{"id":"reference/pyexp/natun-built-ins/time","title":"time","description":"Module time is a  module of time-related functions and constants. The module defines the following functions:","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/built-in-constants-and-functions":{"id":"reference/pyexp/pyexp-language-definition/built-in-constants-and-functions","title":"Built-in constants and functions","description":"The outermost block of the Starlark environment is known as the \\"predeclared\\" block. It defines a number of fundamental values and functions needed by all Starlark programs, such as None, True, False, and len, and possibly additional application-specific names.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/built-in-methods":{"id":"reference/pyexp/pyexp-language-definition/built-in-methods","title":"Built-in methods","description":"This section lists the methods of built-in types. Methods are selected using dot expressions. For example, strings have a count method that counts occurrences of a substring; \\"banana\\".count(\\"a\\") yields 3.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/data-types":{"id":"reference/pyexp/pyexp-language-definition/data-types","title":"Data types","description":"These are the main data types built in to the interpreter:","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/expressions":{"id":"reference/pyexp/pyexp-language-definition/expressions","title":"Expressions","description":"An expression specifies the computation of a value.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/lexical-elements":{"id":"reference/pyexp/pyexp-language-definition/lexical-elements","title":"Lexical elements","description":"A Starlark program consists of one or more modules. Each module is defined by a single UTF-8-encoded text file.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/name-binding-and-variables":{"id":"reference/pyexp/pyexp-language-definition/name-binding-and-variables","title":"Name binding and variables","description":"After a Starlark file is parsed, but before its execution begins, the Starlark interpreter checks statically that the program is well formed. For example, break and continue statements may appear only within a loop; a return statement may appear only within a function; and load statements may appear only outside any function.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/README":{"id":"reference/pyexp/pyexp-language-definition/README","title":"PyExp: Language definition","description":"Natun\'s Python Expression(PyExp) Language is based on the Starlark dialect of Python, which is intended for use as a configuration language.","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/statements":{"id":"reference/pyexp/pyexp-language-definition/statements","title":"Statements","description":"Pass statements","sidebar":"reference"},"reference/pyexp/pyexp-language-definition/value-concepts":{"id":"reference/pyexp/pyexp-language-definition/value-concepts","title":"Value concepts","description":"Starlark has eleven core data types. An application that embeds the Starlark intepreter may define additional types that behave like Starlark values. All values, whether core or application-defined, implement a few basic behaviors:","sidebar":"reference"},"reference/pyexp/readme":{"id":"reference/pyexp/readme","title":"Python Expression Language (PyExp)","description":"The Python Expression(PyExp) Language is one of the most popular ways for you to define the builder\'s business logic.","sidebar":"reference"},"reference/spec":{"id":"reference/spec","title":"Natun Spec","description":"Kubernetes Operator","sidebar":"reference"},"troubleshooting-features":{"id":"troubleshooting-features","title":"Troubleshooting features","description":"","sidebar":"docs"},"tutorial-building-your-first-feature":{"id":"tutorial-building-your-first-feature","title":"Walkthrough: Building your first Feature","description":"Background","sidebar":"docs"},"welcome/demo-features":{"id":"welcome/demo-features","title":"Demo features","description":"","sidebar":"docs"},"welcome/hello-world-feature":{"id":"welcome/hello-world-feature","title":"Hello World feature","description":"Creating a feature is as simple as specifying a YAML file.  Here\'s an example of a minimal feature definition:","sidebar":"docs"},"welcome/the-mock-website":{"id":"welcome/the-mock-website","title":"The mock website","description":"We\'ve put in place a mock website named \\"MassiveDynamic.\\"","sidebar":"docs"}}}')}}]);