"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5065],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,m=d["".concat(u,".").concat(p)]||d[p]||l[p]||o;return n?r.createElement(m,i(i({ref:t},f),{},{components:n})):r.createElement(m,i({ref:t},f))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="Feature Definitions",s={unversionedId:"reference/how-does-natun-work/features/feature-definitions",id:"reference/how-does-natun-work/features/feature-definitions",title:"Feature Definitions",description:"To build production-ready features, Natun must understand the logic of the Feature and create the engineering setup",source:"@site/docs/reference/how-does-natun-work/features/feature-definitions.md",sourceDirName:"reference/how-does-natun-work/features",slug:"/reference/how-does-natun-work/features/feature-definitions",permalink:"/docs/reference/how-does-natun-work/features/feature-definitions",draft:!1,editUrl:"https://github.com/raptor-ml/docs/tree/master/docs/reference/how-does-natun-work/features/feature-definitions.md",tags:[],version:"current",frontMatter:{},sidebar:"reference",previous:{title:"Aggregations",permalink:"/docs/reference/how-does-natun-work/features/aggregations"},next:{title:"Features SLA",permalink:"/docs/reference/how-does-natun-work/features/feature-sla"}},u={},c=[],f={toc:c};function l(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},f,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"feature-definitions"},"Feature Definitions"),(0,a.kt)("p",null,"To build production-ready features, Natun must understand the logic of the Feature and create the engineering setup\nrequired for the production version and introduce a new way of describing features - Feature Definitions."),(0,a.kt)("p",null,"Feature Definitions are new Kubernetes resources that bundle the Feature's logic and the engineering aspects;\nthey're usually written as YAML manifests and composed of two parts:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Declarative definition-")," ",(0,a.kt)("br",null),"\nInstruct Natun on implementing the advanced mechanisms in production while implementing them differently for training purposes."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Imperative definition-")," ",(0,a.kt)("br",null),"\nThe Python-like (PyExp) code allows you the freedom and creativity to do fancy stuff.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Feature Definition",src:n(6137).Z,width:"561",height:"342"})),(0,a.kt)("p",null,"Natun uses these definitions to create your features in research and production environments, provision the necessary\ndata connections, compute and storage resources, and offer collaboration, management and governance layers around features."),(0,a.kt)("p",null,"Features are usually written by the data-scientists while developing the model using the LabSDK,\nthen they can be exported to the Feature Definitions as ",(0,a.kt)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," files - and are both human and machine-readable.\nA feature definition file has two main parts: the ",(0,a.kt)("strong",{parentName:"p"},"Spec")," (specification), and the ",(0,a.kt)("strong",{parentName:"p"},"Metadata"),"."))}l.isMDXComponent=!0},6137:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/feature-def-a4aa476cb1ebe5135fbe9bd8175230aa.png"}}]);